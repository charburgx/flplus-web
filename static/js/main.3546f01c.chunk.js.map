{"version":3,"sources":["api/constants.tsx","ui/VAlign.tsx","ui/header/HeaderButton.tsx","ui/SmartLink.tsx","ui/header/HeaderLinks.tsx","ui/header/Header.tsx","ui/main_page/MainContent.tsx","pages/MainPage.tsx","ui/nav/NavBack.tsx","pages/InfoPage.tsx","pages/FAQPage.tsx","App.tsx","api/version.tsx","index.tsx"],"names":["FALLBACK_VER","html_url","name","tag_name","loading","WIN_GITHUB","WIN_SOURCE","WIN_ISSUES","WIN_WIKI","VAlign","props","className","children","HeaderButton","href","pos","icon","SmartLink","substring","Fragment","React","Children","map","child","isValidElement","cloneElement","to","HeaderLinks","entries","ent","i","length","text","Header","ver","src","alt","draggable","content","title","image","iCS","OuterColumn","InnerColumn","ContentBlock","id","j","MainContent","MainPage","NavBack","style","marginLeft","InfoPage","page","info","inf","c","FAQPage","App","state","useState","Constants","wversion","setWVersion","useEffect","axios","get","then","res","Array","isArray","data","wv","catch","err","console","log","useWinVersion","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3546f01c.chunk.js","sourcesContent":["/**\n * Version information obtained from a github release\n */\nexport type GHVersion = {\n    html_url: string,\n    name: string,\n    tag_name: string,\n    loading?: Boolean\n};\n\n/**\n * Default version used as fallback in case API request fails\n */\nexport const FALLBACK_VER: GHVersion = {\n    html_url: \"\",\n    name: \"Beta\",\n    tag_name: \"b0.1.0\",\n    loading: true\n};\n\nconst issues = \"issues\";\nconst wiki = \"wiki\";\n\nexport const WIN_GITHUB: string = \"charburgx/flplus-win\";\nexport const WIN_SOURCE: string = \"https://github.com/\" + WIN_GITHUB;\nexport const WIN_ISSUES: string = WIN_SOURCE + '/' + issues;\nexport const WIN_WIKI:   string = WIN_SOURCE + '/' + wiki;\nexport const WEB_GITHUB: string = \"charburgx/flplus-web\";","import React from 'react';\n\n/**\n * Aligns content vertically\n */\nconst VAlign = (props: any) => (\n    <div {...props} className={`valign-wrapper ${props.className}`}>\n        {props.children}\n    </div>\n);\n\nexport default VAlign;","import React from 'react';\n\n/**\n * Main buttons for use in center of header\n */\nconst HeaderButton = ({href, pos, icon, children}: {href: string, pos: string, icon?: string, children?: any}) => (\n<a href={href} className={`waves-effect btn dl-btn-${pos}`}>\n    {icon ?\n    <i className={`material-icons ${pos}`}>{icon}</i>\n    : \"\"}\n    {children}\n</a>)\n\nexport default HeaderButton;","import React, { ReactChild } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype props = {\n    href: string, \n    children?: any\n}\n\n/**\n * Component wrapper which chooses an external link for external links and a router link for internal links\n * \n * @component\n */\nconst SmartLink = ({href, children}: props) => {\n    const isExternal = (href.substring(0, 4) === \"http\");\n    \n    return ( isExternal ? \n        <React.Fragment>\n            {/* Return children with href prop */}\n            {\n                React.Children.map(children, (child: any) => (\n                    React.isValidElement(child) ? \n                        React.cloneElement(child, { href: href } as Partial<unknown>) \n                        : child\n                    )\n                )\n            }\n        </React.Fragment> : \n        <Link to={href}>{children}</Link>    \n    )\n}\n\nexport default SmartLink;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SmartLink from 'ui/SmartLink';\n\ntype Entry = {\n    text: string,\n    href: string,\n    icon?: string\n}\n\nconst HeaderLinks = ({entries}: {entries: Entry[]}) => (\n    <div className=\"links\">\n        {entries.map((ent, i, { length }) => (\n            <React.Fragment>\n                <SmartLink href={ent.href}>\n                    <a className=\"waves-effect waves-light btn-small btn-clear\">\n                        {ent.icon ? <i className=\"material-icons left\">{ent.icon}</i> : \"\"}\n                        <span>{ent.text}</span>\n                    </a>\n                </SmartLink>\n\n                {!(length === i+1) ? <div className=\"sep\"></div> : \"\"}\n            </React.Fragment>\n        ))}\n    </div>\n)\n\nexport default HeaderLinks;","import React from 'react'\nimport './Header.scss';\nimport { GHVersion, WIN_SOURCE, WIN_WIKI, WIN_ISSUES } from 'api/constants';\nimport VAlign from 'ui/VAlign';\nimport HeaderButton from './HeaderButton';\nimport HeaderLinks from './HeaderLinks';\n\ntype props = {\n    /**\n     * GitHub version info, to display in tag\n     */\n    ver: GHVersion\n}\n\nconst Header = ({ ver }: props ) => (\n    <div className=\"header\">\n        <VAlign className=\"title-wrapper\">\n            <img src=\"/favicon.svg\" alt=\"\" draggable=\"false\"/>\n\n            <span className=\"title\">\n                FL Plus\n            </span>\n\n            {/* Show version info once its loaded */}\n            { !ver.loading ? \n            <span className=\"version\">\n                {ver.tag_name}\n            </span> : \"\"\n            }\n        </VAlign>\n\n        <span className=\"subtitle\">\n            Boost workflow productivity in FL Studio\n        </span>\n\n        <HeaderButton href={ver.html_url} pos=\"left\" icon=\"download\" >\n            Download\n        </HeaderButton>\n\n        <HeaderButton href={WIN_SOURCE} pos=\"right\" icon=\"code\" >\n            Source\n        </HeaderButton>\n\n        <HeaderLinks entries={[\n             { text: \"Documentation\", icon: \"book\", href: WIN_WIKI },\n             { text: \"FAQ\", icon: \"help\", href: \"/faq\" },\n             { text: \"GitHub\", icon: \"code\", href: WIN_SOURCE },\n             { text: \"Suggestion\", icon: \"announcement\", href: WIN_ISSUES }\n        ]} />\n    </div>\n)\n\nexport default Header;","/**\n * Main content, intended for use in landing page to display the main features of FL Plus\n */\n\nimport React from 'react';\nimport './MainContent.scss';\n\n/**\n * Data type for content block\n */\ntype contentDict = { \n    title: string, \n    content: string[], \n    image?: string \n}\n\nconst content: [contentDict, contentDict, contentDict, contentDict] = [\n    { \n        title: \"Quick Create Automation Clip\", \n        content: [\n            \"Simply press CTRL+SHIFT+A to create an automation clip on the most recently tweaked parameter.\"\n        ],\n        image: \"/panel_1_3_3.png\"\n    },\n    {\n        title: \"Rapidly Swap Colors\",\n        content: [\n            \"Simply press X and the desired color to quickly switch between colors while editing in the Piano Roll.\"\n        ],\n        image: \"/panel2.png\"\n    },\n    {\n        title: \"Multiple Custom Workspaces\",\n        content: [\n            \"Say goodbye to wrangling windows.\"\n        ],\n        image: \"/panel3.png\"\n    },\n    {\n        title: \"Automatically Disable Reach Playback\",\n        content: [\n            \"No longer experience Edison randomly jumping to the start of playback.\"\n        ],\n        image: \"/panel4_2.png\"\n    }\n]\n\n// outer column size\nconst oCS = 's12 m6';\n\n// inner column sizes (for image and text)\nconst iCS = ['s6 m6 l4', 's6 m6 l8'];\n\n/**\n * Use for layout of main content blocks on page\n */\nconst OuterColumn = ({children}: {children: any}) => (\n    <div className={`col ${oCS} outer`}>\n        {children}\n    </div>\n);\n\n/**\n * Use for layout inside of main content blocks\n * \n * Consist of column for image and for a text block\n */\nconst InnerColumn = ({children}: {children: any[]}) => (\n    <div className=\"row inner\">\n        {/* Image column */}\n        <div className={`col ${iCS[0]}`}>\n            {children && children.length > 0 ? children[0] : \"\"}\n        </div>\n\n        {/* Text column */}\n        <div className={`col ${iCS[1]}`}>\n            {children && children.length > 1 ? children[1] : \"\"}\n        </div>\n    </div>\n);\n\n/**\n * Content block that consists of an image, text header, and text content (body)\n */\nconst ContentBlock = ({i}: {i: number}) => (\n    <OuterColumn>\n        <InnerColumn>\n            <img src={content[i].image} id={`img${i}`} alt=\"\" draggable=\"false\"/>\n\n            <div className=\"text\">\n                <span className=\"text-header\">{content[i].title}</span>\n\n                {/* Add new line for each entry in content */}\n                {content[i].content.map((ent, j, {length}) => \n                    <React.Fragment>\n                        <span>{ent}</span> \n                        {(j+1 === length) ? \"\" : <br/>}\n                    </React.Fragment>\n                )}\n            </div>\n        </InnerColumn>\n    </OuterColumn>\n);\n\nconst MainContent = () => \n(<div className=\"main-content container\">\n    <div className=\"row outer\">\n        {[0, 1].map(i => <ContentBlock i={i} />)}\n    </div>\n    <div className=\"row outer\">\n        {[2, 3].map(i => <ContentBlock i={i} />)}\n    </div>\n\n    <div className=\"and-more\">\n        <span className=\"text-header\">And more!</span>\n    </div>\n</div>);\n\nexport default MainContent;","/**\n * Landing page\n */\n\nimport React from 'react';\nimport Header from 'ui/header/Header';\nimport MainContent from 'ui/main_page/MainContent';\nimport { GHVersion } from 'api/constants';\n\nconst MainPage = ({ ver }: { ver: GHVersion }) => (\n    <div className=\"main\">\n        <Header ver={ver} />\n        <MainContent />\n    </div>\n)\n\nexport default MainPage;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport VAlign from 'ui/VAlign';\n\n/**\n * Navigation bar for non-landing pages\n */\nconst NavBack = ({text}: {text: string}) => \n(<Fragment>\n    <VAlign className=\"nav back\">\n        <Link to=\"/\">\n            <a className=\"waves-effect waves-light btn-small btn-clear\">\n                <i className=\"material-icons left\">arrow_back</i>\n                Back\n            </a>\n        </Link>\n        <div className=\"sep\"></div>\n        <span className=\"text-small\" style={{marginLeft: \"16px\"}}>{text}</span>\n    </VAlign>\n</Fragment>);\n\nexport default NavBack;","import React, { Fragment } from 'react';\nimport './InfoPage.scss';\nimport NavBack from 'ui/nav/NavBack';\n\n/**\n * Page info object, used to define a block of text with a title and content body\n */\nexport type Info = { \n    title?: string, \n    /**\n     * Main content\n     * \n     * Each array entry is a new line\n     */\n    content: (string | JSX.Element)[] \n};\n\ntype props = {\n    /**\n     * The page title, to be displayed at the top of page\n     */\n    page: string,\n    /**\n     * Page content, centered left\n     */\n    info: Info[]\n}\n\n/**\n * A page with blocks of information\n * \n * Page content is centered left\n * \n * @component\n */\nconst InfoPage = ({page, info}: props) => <Fragment>\n    <div className=\"page-info container\">\n        <NavBack text={page} />\n\n        <div className=\"row\">\n            <div className=\"col s12 m7 l6 xl5\">\n                {info.map(inf => <Fragment>\n                    <span className=\"text-header\">{inf.title}</span>\n                    \n                    {inf.content.map((c, i, {length}) => <Fragment>\n                        <span className=\"text\">{c}</span>\n                        {!(length === i + 1) ? <br/> : <div className=\"block-end\"></div>}\n                    </Fragment>)}\n                </Fragment>)}\n            </div>\n        </div>\n    </div>\n</Fragment>;\n\nexport default InfoPage;","/**\n * Frequently Asked Questions page\n */\n\nimport React, { Fragment } from 'react';\nimport InfoPage, { Info } from 'pages/InfoPage';\nimport { WIN_ISSUES, WIN_WIKI } from 'api/constants'\n\nconst content: Info[] = [\n    {\n        title: \"Is FL Plus available on Mac?\",\n        content: [\n            \"There are currently no plans for FL Plus on Mac, sorry.\"\n        ]\n    },\n    {\n        title: \"Is this legal?\",\n        content: [\n            \"Given the recent DMCA on another project auxiliary to FL (which will not be named here), it is worth addressing the legality of our project.\",\n            <Fragment>The following is crucial: <b>FL Plus is in no way a modification of FL Studio's code</b>. Everything one can achieve with FL Plus is doable without FL Plus and without making any changes to the FL Studio executable. <b>FL Plus simply takes functionality that already exists and makes it faster.</b></Fragment>,\n            \"That being said, FL Plus is 100% willing to cooperate with Image-Line on any legal matters.\"\n        ]\n    },\n    {\n        title: \"It isn't working!\",\n        content: [\n            <Fragment>Most likely, this is because you have not detached your windows. A guide for this can be found <a href={WIN_WIKI}>here</a>.</Fragment>,\n            <Fragment>If this is not the case, you can always issue a ticket on the <a href={WIN_ISSUES}>GitHub Issues</a> page. In case you have encountered an error, hopefully someone can fix it soon. Please keep in mind that this is a small project effectively run by one person, so you might not get immediate support.</Fragment>\n        ]\n    }\n];\n\nconst FAQPage = () => <InfoPage page=\"Frequently Asked Questions\" info={content} />\n\nexport default FAQPage;","import React, { useState, useEffect } from 'react'\nimport './App.scss';\nimport MainPage from './pages/MainPage';\nimport { useWinVersion } from './api/version';\nimport * as Constants from 'api/constants';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport FAQPage from 'pages/FAQPage';\n\nconst App = () => {\n  // Get release version info\n  const [wversion] = useWinVersion();\n\n  // Routing\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <MainPage ver={wversion} />\n          </Route>\n          <Route path=\"/faq\">\n            <FAQPage />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n      \n    </div>\n  );\n};\n\nexport default App;","import React, { useState, useEffect } from 'react';\nimport * as Constants from 'api/constants';\nimport axios from 'axios';\n\nconst uri = 'https://api.github.com/repos/' + Constants.WIN_GITHUB + '/releases';\n\n/**\n * Hook for getting most recent released version of flplus-win\n * \n * @returns An array with a stateful GHVersion instance at index 0\n */\nexport const useWinVersion: () => any[] = () => {\n  const state = useState(Constants.FALLBACK_VER);\n  const [wversion, setWVersion] = state;\n\n  useEffect(() => { \n    axios.get(uri)\n      .then(res => {\n        if(!Array.isArray(res.data) || res.data.length <= 0) return;\n        \n        const wv = res.data[0] as Constants.GHVersion;\n        setWVersion({...wv, loading: false});\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    \n    return () => setWVersion(Constants.FALLBACK_VER);\n  }, [])\n\n  return [wversion];\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}